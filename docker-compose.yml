version: '2'

services:

  gtm_postgis:
    container_name: gtm_postgis
    restart: unless-stopped
    image: mdillon/postgis:11
    # ports: 
    #   - "127.0.0.1:5432:5432"    
    volumes: 
      - /data/gtm_postgis:/var/lib/postgresql/data
    environment: 
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASS: ${POSTGRES_PASS}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}

  gtm_twitter_listener:
    build:
      context: .
      dockerfile: twitter_listener/Dockerfile  
    image: twitter_listener 
    container_name: gtm_twitter_listener
    restart: unless-stopped    
    volumes:
      - /data/tweets:/data/tweets
    links: 
      - gtm_postgis
    depends_on: 
      - gtm_postgis
    environment:
      SAVE_DATA_MODE: DB # DB or FILE
      TWEETS_OUPUT_FOLDER: '/data/tweets'
      CONSUMER_KEY: ${CONSUMER_KEY}
      CONSUMER_SECRET: ${CONSUMER_SECRET}
      ACCESS_TOKEN: ${ACCESS_TOKEN}
      ACCESS_SECRET: ${ACCESS_SECRET}
      DB_HOSTNAME: gtm_postgis
      DB_PORT: 5432  
      DB_USER: ${POSTGRES_USER}
      DB_PASS: ${POSTGRES_PASS}
      DB_DATABASE: tweets_db
      # DB_REBUILD: 'False'
      MIN_X: ${MIN_X}
      MAX_X: ${MAX_X}
      MIN_Y: ${MIN_Y}
      MAX_Y: ${MAX_Y}
      AREA_NAME: ${AREA_NAME}
      LANGUAGES:  ${LANGUAGES}

  gtm_event_detector:
    build:
      context: .
      dockerfile: event_detector/Dockerfile      
    image: event_detector 
    container_name: gtm_event_detector
    volumes:
      - /data/processing:/data/processing
    links: 
      - gtm_postgis
    depends_on: 
      - gtm_postgis
      - gtm_twitter_listener
    environment: 
      DB_HOSTNAME: gtm_postgis
      DB_PORT: 5432  
      DB_USER: ${POSTGRES_USER}
      DB_PASS: ${POSTGRES_PASS}
      DB_DATABASE: tweets_db
      LANGUAGES: ${LANGUAGES} 
  #   command: conda run -n gtm python event_detector.py

